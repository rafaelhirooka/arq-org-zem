
AVR182.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000360  00000000  00000000  000001a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000005f  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  0000055f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000034  00000000  00000000  0000057f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000018d  00000000  00000000  000005b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000071  00000000  00000000  00000740  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f5  00000000  00000000  000007b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	54 c0       	rjmp	.+168    	; 0xac <__vector_1>
   4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
   6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
   8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
   a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
   c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
   e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
  10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
  12:	22 c0       	rjmp	.+68     	; 0x58 <__bad_interrupt>
  14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
  16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
  18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
  1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
  1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
  20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>
  22:	1a c0       	rjmp	.+52     	; 0x58 <__bad_interrupt>
  24:	19 c0       	rjmp	.+50     	; 0x58 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf ed       	ldi	r28, 0xDF	; 223
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	ea e4       	ldi	r30, 0x4A	; 74
  36:	f1 e0       	ldi	r31, 0x01	; 1
  38:	02 c0       	rjmp	.+4      	; 0x3e <.do_copy_data_start>

0000003a <.do_copy_data_loop>:
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0

0000003e <.do_copy_data_start>:
  3e:	a0 36       	cpi	r26, 0x60	; 96
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <.do_copy_data_loop>

00000044 <__do_clear_bss>:
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	a0 e6       	ldi	r26, 0x60	; 96
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
  4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
  4e:	a0 36       	cpi	r26, 0x60	; 96
  50:	b1 07       	cpc	r27, r17
  52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
  54:	24 d0       	rcall	.+72     	; 0x9e <main>
  56:	78 c0       	rjmp	.+240    	; 0x148 <_exit>

00000058 <__bad_interrupt>:
  58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <setup>:
  5a:	cf 93       	push	r28
  5c:	df 93       	push	r29
  5e:	cd b7       	in	r28, 0x3d	; 61
  60:	de b7       	in	r29, 0x3e	; 62
  62:	a7 e3       	ldi	r26, 0x37	; 55
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e7 e3       	ldi	r30, 0x37	; 55
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	80 81       	ld	r24, Z
  6c:	81 60       	ori	r24, 0x01	; 1
  6e:	8c 93       	st	X, r24
  70:	a5 e5       	ldi	r26, 0x55	; 85
  72:	b0 e0       	ldi	r27, 0x00	; 0
  74:	e5 e5       	ldi	r30, 0x55	; 85
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	80 81       	ld	r24, Z
  7a:	82 60       	ori	r24, 0x02	; 2
  7c:	8c 93       	st	X, r24
  7e:	aa e5       	ldi	r26, 0x5A	; 90
  80:	b0 e0       	ldi	r27, 0x00	; 0
  82:	ea e5       	ldi	r30, 0x5A	; 90
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	80 81       	ld	r24, Z
  88:	8c 93       	st	X, r24
  8a:	ab e5       	ldi	r26, 0x5B	; 91
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	eb e5       	ldi	r30, 0x5B	; 91
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	80 81       	ld	r24, Z
  94:	80 64       	ori	r24, 0x40	; 64
  96:	8c 93       	st	X, r24
  98:	df 91       	pop	r29
  9a:	cf 91       	pop	r28
  9c:	08 95       	ret

0000009e <main>:
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
  a6:	d9 df       	rcall	.-78     	; 0x5a <setup>
  a8:	78 94       	sei
  aa:	ff cf       	rjmp	.-2      	; 0xaa <main+0xc>

000000ac <__vector_1>:
  ac:	1f 92       	push	r1
  ae:	0f 92       	push	r0
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	0f 92       	push	r0
  b4:	11 24       	eor	r1, r1
  b6:	8f 93       	push	r24
  b8:	9f 93       	push	r25
  ba:	af 93       	push	r26
  bc:	bf 93       	push	r27
  be:	ef 93       	push	r30
  c0:	ff 93       	push	r31
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	22 97       	sbiw	r28, 0x02	; 2
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	cd bf       	out	0x3d, r28	; 61
  d0:	19 82       	std	Y+1, r1	; 0x01
  d2:	0f c0       	rjmp	.+30     	; 0xf2 <__stack+0x13>
  d4:	e0 e3       	ldi	r30, 0x30	; 48
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	88 2f       	mov	r24, r24
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	84 70       	andi	r24, 0x04	; 4
  e0:	90 70       	andi	r25, 0x00	; 0
  e2:	00 97       	sbiw	r24, 0x00	; 0
  e4:	21 f4       	brne	.+8      	; 0xee <__stack+0xf>
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	8f 5f       	subi	r24, 0xFF	; 255
  ea:	89 83       	std	Y+1, r24	; 0x01
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__stack+0x13>
  ee:	84 e6       	ldi	r24, 0x64	; 100
  f0:	89 83       	std	Y+1, r24	; 0x01
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	85 30       	cpi	r24, 0x05	; 5
  f6:	70 f3       	brcs	.-36     	; 0xd4 <__vector_1+0x28>
  f8:	89 81       	ldd	r24, Y+1	; 0x01
  fa:	84 36       	cpi	r24, 0x64	; 100
  fc:	a1 f0       	breq	.+40     	; 0x126 <__stack+0x47>
  fe:	e8 e3       	ldi	r30, 0x38	; 56
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	80 83       	st	Z, r24
 106:	8f e2       	ldi	r24, 0x2F	; 47
 108:	8a 83       	std	Y+2, r24	; 0x02
 10a:	03 c0       	rjmp	.+6      	; 0x112 <__stack+0x33>
 10c:	8a 81       	ldd	r24, Y+2	; 0x02
 10e:	81 50       	subi	r24, 0x01	; 1
 110:	8a 83       	std	Y+2, r24	; 0x02
 112:	8a 81       	ldd	r24, Y+2	; 0x02
 114:	88 23       	and	r24, r24
 116:	d1 f7       	brne	.-12     	; 0x10c <__stack+0x2d>
 118:	a8 e3       	ldi	r26, 0x38	; 56
 11a:	b0 e0       	ldi	r27, 0x00	; 0
 11c:	e8 e3       	ldi	r30, 0x38	; 56
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	8e 7f       	andi	r24, 0xFE	; 254
 124:	8c 93       	st	X, r24
 126:	22 96       	adiw	r28, 0x02	; 2
 128:	f8 94       	cli
 12a:	de bf       	out	0x3e, r29	; 62
 12c:	cd bf       	out	0x3d, r28	; 61
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	ff 91       	pop	r31
 134:	ef 91       	pop	r30
 136:	bf 91       	pop	r27
 138:	af 91       	pop	r26
 13a:	9f 91       	pop	r25
 13c:	8f 91       	pop	r24
 13e:	0f 90       	pop	r0
 140:	0f be       	out	0x3f, r0	; 63
 142:	0f 90       	pop	r0
 144:	1f 90       	pop	r1
 146:	18 95       	reti

00000148 <_exit>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <_exit>
